

<div class="container col-sm-5 mt-5">

  <div class="form-group" id="newMessageForm">
    <label for="comment"><h4>Welcome <%= username %></h4></label>
    <textarea autofocus class="form-control" rows="2" id="message"></textarea>
    <button id="postMessageButton">Add Message</button>
  </div>

  <div id="messagesContainer">
  </div>

</div>

<script type="text/javascript">
  let h = $(window).height();
  $(messagesContainer).height(0.65*h);
</script>
<script>
  let username = "<%= username %>"
  let roomname = "<%= roomname %>"
</script>

<script type="text/javascript">
  var MessageModel = Backbone.Model.extend({
    urlRoot: '/messages',
  });

  var SailsCollection = Backbone.Collection.extend({
    sailsCollection: "", //new properties to the collection object
    socket: null, //sailscollection:holds sails model,socket holds socket name
    sync: function(method, model, options) {
      var where = {};
      if (options.where) { //check if where clausses are sent and check for specific ids
        where = {
          where: options.where
        }
      }
      if (typeof this.sailsCollection === "string" && this.sailsCollection !== "") {
        this.socket = io.sails.connect();
        this.socket.on("connect", _.bind(function() {
          //this.socket.request({url: '/'+ this.sailsCollection,where:option.where}, _.bind(function(users){
          options.url = '/' + this.sailsCollection
          options.method = 'get'
          this.socket.request(options, _.bind(function(users) {
            this.set(users);
          }, this));

          this.socket.on("messages", _.bind(function(msg) {
            var m = msg.verb;
            console.log("verb" + msg.data)
            if (m === "created") {
              this.add(msg.data);
            } else if (m === "updated") {
              this.get(msg.id).set(msg.data);
            } else if (m === "destroyed") {
              this.remove(this.get(msg.id));
            }
          }, this));
        }, this));
      } else {
        console.log("Error: Cannot retrieve models because property 'sailsCollection' not set on the collection");
      }
    }
  });


  var MessageCollection = SailsCollection.extend({
    sailsCollection: 'messages',
    model: MessageModel,
  });


  var messages = new MessageCollection();

  messages.fetch();


  $("#postMessageButton").click(function() {
    var messageText = $("#message").val();
    console.log(roomname)
    messages.create({
      username: username,
      content: messageText,
      roomname: roomname
    }, {
      wait: true
    });
    $("#message").val("");
  });
  //add templateSettings to work with underscore instead of ejs
  _.templateSettings = {
    interpolate: /\{\{(.+?)\}\}/g
  };
  var MessagesView = Backbone.View.extend({
    el: '#messagesContainer', //references dom object created in browser
    initialize: function() {
      this.collection.on('add', this.render, this);
      this.render();
    },
    template: _.template("<p><strong>{{ username }}:</strong> {{content}}</p>"), //compile the template using underscore
    render: function() { //render the view object on browser
      this.$el.html(""); //load the compiled template into the backbone el
      console.log(this.collection);
      this.collection.each(function(msg) { //each function is from jquery
        //console.log(msg.toJSON())
        this.$el.append(this.template(msg.toJSON())); //convert message to json and append to el
      }, this)
    }
  });

  var mView = new MessagesView({
    collection: messages
  }); //create the view object
</script>
